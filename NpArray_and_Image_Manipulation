#######################################################################################################
### Array Manipulations / Image Manipulations 

### Make everything below 0, 0
test[test < 0] = 0

### Make everything outside of two boundaries 0
test  = test[np.where((test>900) & (test<1100))]
test[(test <= 900) & (test >= 1100)] = 0



### Check shape of a numpy array
test.shape

### Check type of a numpy array
test.dtype




### Append new item to an existing array
color_list_left = np.array([0,0,0])
average_color_per_left_row = np.average(img_left, axis=0)    
 # find average across average per row
average_left_color = np.average(average_color_per_left_row, axis=0)
# convert back to uint8
average_left_color = np.uint8(average_left_color)
#Appends the new average numpy array for each frame to a new array
color_list_left = np.append(color_list_left,average_left_color)
#Reshapes numpy array into columnscolor_list_left = np.reshape(color_list_left,(-1,3))




### Concatenating two arrays with the same columns
frames = [df1, df2, df3]
result = pd.concat(frames)

#Append one dataframe with same columns to another with the same columns
result = df1.append(df2)

### Concatenate with the same rows - outer join
result = pd.concat([df1, df4], axis=1)

### Concatenate with the same rows - inner join
result = pd.concat([df1, df4], axis=1, join="inner")

### Merge using left join 
result = pd.merge(left, right, on="key")

### Merge on two keys - left join
result = pd.merge(left, right, how="left", on=["key1", "key2"])

### Merge on two keys - right join
result = pd.merge(left, right, how="right", on=["key1", "key2"])

### Merge on two keys - outer join
result = pd.merge(left, right, how="outer", on=["key1", "key2"])

### Merge on two keys - inner join
result = pd.merge(left, right, how="inner", on=["key1", "key2"])
